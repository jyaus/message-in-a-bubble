/*  
  Throughout, --bubble-seed-one and -bubble-seed-two (numbers between 0 and 10) are used to create minor variations among the bubbles. 
*/

:root {
  --wobble-factor: .85px;
}

* {
  box-sizing: border-box;
}

main {
  background-color: hsl(220 60 90);
  background-size: 100% 100%;
  height: 100vh;
  width: 100vw;
  margin: 0;
  padding: 0;
  font-family: 'Signika', sans-serif;
  overflow: hidden;
}

.bg {
  position: absolute;
  z-index: 1;
  inset: 0;
  background-image: url(bubbles-bg.jpg);
  background-size: 100% 100%;
  opacity: .3;
}

.bubbles {
  position: relative;
  z-index: 3;
  padding: 2vmin;
}

.bubble {
  position: absolute;
  top: calc(var(--bubble-seed-one) * 9vh);
  left: calc(var(--bubble-seed-two) * 9vw);
  padding: .5rem;
  aspect-ratio: 1;
  max-width: 150px;
  font-family: 'Signika', sans-serif;
  background-color: hsl(calc(30 * var(--bubble-seed-one)) 90% 95% / .1);
  background-image: linear-gradient(to bottom, transparent, transparent 60%, hsl(0 100% 100% / .3));
  background-repeat: no-repeat;
  border: 3px solid hsl(0 0 60 / .2);
  border-radius: 100vmax;
  cursor: pointer;
  animation-duration: max(calc(var(--bubble-seed-two) * 8s), 10s), 5s;
  animation-name: wobble, shimmer;
  animation-timing-function: linear, linear;
  animation-iteration-count: infinite, infinite;
  animation-direction: alternate, alternate;
}

.bubble::before {
  content: "";
  display: block;
  position: absolute;
  inset: 7%;
  border-radius: 100vmax;
  border: 3px solid hsl(0 0 100 / .4);
  border-width: 0 0 0 3px;
  rotate: 45deg;
  animation-duration: max(calc(var(--bubble-seed-one) * 1s), 3s);
  animation-name: spin;
  animation-timing-function: linear;
  animation-iteration-count: infinite;
  animation-direction: alternate;
}

.bubble.popping {
  animation-duration: .25s; /* make sure this is greater than the timeout on the popBubble() function */
  animation-name: pop;
  animation-timing-function: linear;
  animation-iteration-count: 1;
  animation-direction: normal;
}

.panel {
  position: absolute;
  z-index: 2;
  bottom: 0;
  right: 0;
  display: flex;
  flex-direction: column;
  align-items: flex-end;
  justify-content: flex-end;
  aspect-ratio: 1;
  background: hsla(150 30 95 / .8);
  border: 1px solid hsl(0 0 80%);
  border-radius: 100vmin 0 0 0;
  box-shadow: -5px -5px 5px hsl(0 0 50% / .1);
}

.panel-header {
  display: flex;
  flex-direction: column;
  gap: .3rem;
  justify-content: flex-end;
  align-items: flex-end;
  color: hsl(0 0 25%);
  text-align: center;  
}

h1 {
  margin: 0;
  padding: 0;
  width: 100%;
  text-align: center;
  font-size: 1rem;
}

.description {
  margin: 0;
  font-size: .8rem;
}

.panel-inner {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  justify-content: flex-end;
  align-items: flex-end;
  padding: 1rem;
  height: 100%;
  max-width: 70%;
}

.panel textarea {
  max-width: 100%;
  height: 4.5em;
  font-family: 'Signika', sans-serif;
  border: 1px solid hsl(0 0 50%);
  border-radius: 10px;
  resize: none;
}

.panel button {
  font-family: 'Signika', sans-serif;
  width: 100%;
  max-width: 100%;
  padding: .5rem;
  border-radius: 100vmin;
  border: 1px solid hsl(0 0 50%);
  cursor: pointer;
}

@keyframes wobble {
  0% {
    transform: translate(calc(var(--bubble-seed-one) * (var(--wobble-factor) * 1)), calc(var(--bubble-seed-two) * (var(--wobble-factor) * 1.8)));
    filter: saturate(100%);
  }
  30% {
    transform: translate(calc(var(--bubble-seed-two) * (var(--wobble-factor) * -1.5)), calc(var(--bubble-seed-one) * (var(--wobble-factor) * -1.5)));
  }
  60% {
    transform: translate(calc(var(--bubble-seed-one) * (var(--wobble-factor) * 2)), calc(var(--bubble-seed-two) * (var(--wobble-factor) * 1.3)));
  }
  90% {
    transform: translate(calc(var(--bubble-seed-two) * (var(--wobble-factor) * -1)), calc(var(--bubble-seed-one) * (var(--wobble-factor) * -1.5)));
  }
}

@keyframes shimmer {
  0% {
    filter: saturate(100%) brightness(100%);
  }
  
  60% {
    filter: saturate(calc(100% - ((var(--bubble-seed-one)) * 7%))) brightness(calc(100% + (var(--bubble-seed-one) * 0.5%)));
  }

  100% {
    filter: saturate(100%) brightness(100%);
  }
}


@keyframes spin {
  0% {
    rotate: 45deg;
    opacity: 1;
  }
  
  60% {
    rotate: 15deg;
    opacity: .5;
  }

  100% {
    rotate: 45deg;
    opacity: 1;
  }
}

@keyframes pop {
  0% {
    opacity: 1;
    scale: 1;
  }
  50% {
    opacity: .3;
    scale: 1.15;
  }
  100% {
    opacity: 0;
    scale: 1.3;
  }
}